// <auto-generated />
using BooksApp_Spring2024.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BooksAppSpring2024.Migrations
{
    [DbContext(typeof(BooksDbContext))]
    [Migration("20240130141827_addingBooksTableWithSeedData")]
    partial class addingBooksTableWithSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BooksApp_Spring2024.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BookTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("BookId");

                    b.HasIndex("CategoryID");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            Author = "Charles Dickens",
                            BookTitle = "Great Expectations",
                            CategoryID = 3,
                            Description = "13t Century Novel about educating an orphan named pip",
                            ISBN = "IUTH829JD",
                            Price = 19.99m
                        },
                        new
                        {
                            BookId = 2,
                            Author = "Dr. Seuss",
                            BookTitle = "The Cat in the Hat",
                            CategoryID = 1,
                            Description = "Childrens Novel about a talking cat",
                            ISBN = "IUTH913KNB",
                            Price = 11.99m
                        },
                        new
                        {
                            BookId = 3,
                            Author = "Bill Martin",
                            BookTitle = "Brown Bear, Brown Bear, What do you see",
                            CategoryID = 2,
                            Description = "A childrens book about colors",
                            ISBN = "IUTH848DIW",
                            Price = 5.99m
                        });
                });

            modelBuilder.Entity("BooksApp_Spring2024.Models.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryID"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            Description = "This is the description for the Science Fiction Category",
                            Name = "Science Fiction"
                        },
                        new
                        {
                            CategoryID = 2,
                            Description = "This is the description for the Technology Category",
                            Name = "Technology"
                        },
                        new
                        {
                            CategoryID = 3,
                            Description = "This is the description for the History Category",
                            Name = "History"
                        });
                });

            modelBuilder.Entity("BooksApp_Spring2024.Models.Book", b =>
                {
                    b.HasOne("BooksApp_Spring2024.Models.Category", "category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("category");
                });
#pragma warning restore 612, 618
        }
    }
}
